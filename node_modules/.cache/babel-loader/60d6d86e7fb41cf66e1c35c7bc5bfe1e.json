{"ast":null,"code":"var _jsxFileName = \"/home/leon/Proyectitos/api-connected-website/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { stringify } from \"querystring\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n`;\n_c = Container;\nconst Title = styled.h1`\n  color: black;\n`;\n_c2 = Title;\nexport default _s(() => {\n  _s();\n\n  const API_KEY = \"nFAEP18e84RVowk1BMRDJ8WE6mi2xVFp\";\n\n  const fetchWrapper = async (url, params) => {\n    const token = localStorage.getItem(API_KEY);\n    const response = await fetch(url, { ...params,\n      headers: { ...params.headers,\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (response.status >= 200 && response.status <= 299) {\n      return response;\n    }\n\n    const responseBody = await response.json();\n    console.log(response.status, responseBody);\n  };\n\n  const basePath = \"api.giphy.com\";\n\n  const get = async (url, query) => {\n    const requestUrl = query ? `${url}?${stringify(query)}` : url;\n    const response = await fetchWrapper(requestUrl, {\n      method: \"GET\"\n    });\n    return response;\n  };\n\n  const test = async () => {\n    const query = {};\n    const response = await get(`${basePath}/trending`, query);\n    const responseBody = await response.json();\n    return responseBody;\n  };\n\n  useEffect(() => {\n    console.log(test());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Title, {\n        children: \"Api Connected Website\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Title\");","map":{"version":3,"sources":["/home/leon/Proyectitos/api-connected-website/src/App.tsx"],"names":["React","useEffect","stringify","styled","Container","div","Title","h1","API_KEY","fetchWrapper","url","params","token","localStorage","getItem","response","fetch","headers","Authorization","Accept","status","responseBody","json","console","log","basePath","get","query","requestUrl","method","test"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAMN,MAAME,KAAK,GAAGH,MAAM,CAACI,EAAG;AACxB;AACA,CAFA;MAAMD,K;AAGN,kBAAe,MAAM;AAAA;;AACnB,QAAME,OAAe,GAAG,kCAAxB;;AAEA,QAAMC,YAAY,GAAG,OAAOC,GAAP,EAAoBC,MAApB,KAAoC;AACvD,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBN,OAArB,CAAd;AACA,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAD,EAAM,EAChC,GAAGC,MAD6B;AAEhCM,MAAAA,OAAO,EAAE,EACP,GAAGN,MAAM,CAACM,OADH;AAEPC,QAAAA,aAAa,EAAG,UAASN,KAAM,EAFxB;AAGPO,QAAAA,MAAM,EAAE,kBAHD;AAIP,wBAAgB;AAJT;AAFuB,KAAN,CAA5B;;AASA,QAAIJ,QAAQ,CAACK,MAAT,IAAmB,GAAnB,IAA0BL,QAAQ,CAACK,MAAT,IAAmB,GAAjD,EAAsD;AACpD,aAAOL,QAAP;AACD;;AACD,UAAMM,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACK,MAArB,EAA6BC,YAA7B;AACD,GAhBD;;AAkBA,QAAMI,QAAQ,GAAG,eAAjB;;AAEA,QAAMC,GAAG,GAAG,OAAOhB,GAAP,EAAoBiB,KAApB,KAAuD;AACjE,UAAMC,UAAU,GAAGD,KAAK,GAAI,GAAEjB,GAAI,IAAGR,SAAS,CAACyB,KAAD,CAAQ,EAA9B,GAAkCjB,GAA1D;AACA,UAAMK,QAAQ,GAAG,MAAMN,YAAY,CAACmB,UAAD,EAAa;AAC9CC,MAAAA,MAAM,EAAE;AADsC,KAAb,CAAnC;AAGA,WAAOd,QAAP;AACD,GAND;;AAQA,QAAMe,IAAI,GAAG,YAAY;AACvB,UAAMH,KAAK,GAAG,EAAd;AACA,UAAMZ,QAAQ,GAAG,MAAMW,GAAG,CAAE,GAAED,QAAS,WAAb,EAAyBE,KAAzB,CAA1B;AACA,UAAMN,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA3B;AACA,WAAOD,YAAP;AACD,GALD;;AAOApB,EAAAA,SAAS,CAAC,MAAI;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,EAAhB;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAjDD","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { stringify } from \"querystring\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0 auto;\n`;\nconst Title = styled.h1`\n  color: black;\n`;\nexport default () => {\n  const API_KEY: string = \"nFAEP18e84RVowk1BMRDJ8WE6mi2xVFp\";\n\n  const fetchWrapper = async (url: string, params: any) => {\n    const token = localStorage.getItem(API_KEY);\n    const response = await fetch(url, {\n      ...params,\n      headers: {\n        ...params.headers,\n        Authorization: `Bearer ${token}`,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    if (response.status >= 200 && response.status <= 299) {\n      return response;\n    }\n    const responseBody = await response.json();\n    console.log(response.status, responseBody);\n  };\n\n  const basePath = \"api.giphy.com\";\n\n  const get = async (url: string, query?: { [key: string]: any }) => {\n    const requestUrl = query ? `${url}?${stringify(query)}` : url;\n    const response = await fetchWrapper(requestUrl, {\n      method: \"GET\",\n    });\n    return response;\n  };\n\n  const test = async () => {\n    const query = {};\n    const response = await get(`${basePath}/trending`, query);\n    const responseBody = await response.json();\n    return responseBody;\n  };\n\n  useEffect(()=>{\n    console.log(test())\n  })\n\n  return (\n    <div>\n      <Container>\n        <Title>Api Connected Website</Title>\n      </Container>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}